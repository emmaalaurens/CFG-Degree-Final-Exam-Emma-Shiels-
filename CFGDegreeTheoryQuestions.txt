
1. Design Heuristics:
In design heuristics, 'matching between the system and the real world' means constructing an app or website that follows the familiarity of a users existing real-world experience. An example of this would be using a magnifying glass for the search bar/icon. This would match with a user’s experience of knowing what tool they use to search with in real life. 
Advantages of this are: 
UI/UX is enhanced and familiar: As the system feels familiar, natural and friendly, then the user will have a better experience and return to the website/app. 
Building on this, if the site is familiar, this will mean the user’s tasks are completed faster and with less error/confusion. There will be less contacts to the app help team if the users experience is clear. 
This also means that the user is more likely to be satisfied or happy with the app/site, if they are a customer - this will increase their confidence in purchasing a product or entering their personal information.

An example of a magnifying glass for a search button is;
function SearchButton() {
  return (
    <button>
      <img src="magnifying-glass-icon.png" alt="Search" />
      Search
    </button>
  );
}


2. What do you understand by “Single source of truth”? and how does it relate to redux? What are the advantages ?  

In redux, the single source of truth means that the global state is contained within a single tree - so your browser cannot override any values or outcomes.  
Advantages of this are: 
Easier to debug as there is only one tree to take from 
Predictable and traceable states. 


3.What is the difference between a stateless component and a stateful component in React?

The behaviour and state of the app is controlled by its stateful components, but the focus and rendering of UI occurs from the stateless components.
 Code example of stateless component: 
 const Greeting = (props) => {
  return <h1>Hello, {props.name}!</h1>;
    };

// Produces 
<Greeting name="Bean" />

Code example of a stateful component, the count value has an increment button and useState hook to manage the count variable: 
import React, { useState } from 'react';

const Counter = () => {
  const [count, setCount] = useState(0);

  const increment = () => {
    setCount(count + 1);
  };

  return (
    <div>
      <p>Count: {count}</p>
      <button onClick={increment}>Increment</button>
    </div>
  );
};

export default Counter;

4.List out the advantages and disadvantages of exploratory testing (used in Agile) and scripted testing?

Advantages of exploratory testing:

Flexibility: Testers can adapt to new information and change their testing approach flexibly, 
Encourages testers to think creatively to discover the unexpected issues. 
Often finds bugs that scripted tests might miss.


Disadvantage of exploratory testing
You have to have a more in=depth knowledge of the domain to conduct an exploratory test. 
Difficult to repeat the test as the test parameters are not pre-defined and lacks formal documentation. 

Advantages of scripted testing
Tests are easily repeatable/reproducable due to pre-defined parameters. 

Disadvantages of scripted testing 
Not as flexible due to their pre-defined parameters
